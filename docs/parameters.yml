originParam:
  in: query
  name: origin
  schema:
    type: string
    pattern: '^\-?\d{1,3}(\.\d+)?,\-?\d{1,3}(\.\d+)?$'
  required: true
  description: Comma-separated longitude/latitude coordinates of the origin, in the WSG84 coordinates system
destinationParam:
  in: query
  name: destination
  schema:
    type: string
    pattern: '^\-?\d{1,3}(\.\d+)?,\-?\d{1,3}(\.\d+)?$'
  required: true
  description: Comma-separated longitude/latitude coordinates of the destination, in the WSG84 coordinates system
scenarioParam:
  in: query
  name: scenario_id
  schema:
    type: string
  required: true
  # TODO: Scenario is very transition centric. Can't trRouting be used with a GTFS or some other type, without a scenario
  description: ID of the scenario to query. A scenario defines the services, agencies and lines to use for this transit calculation
timeOfTripParam:
  in: query
  name: time_of_trip
  schema:
    type: integer
  required: true
  description: |
    time of the trip, in seconds since midnight.
    The time_type field will determine if it represents a departure or arrival time.
    There is no timezone associated with the time, trRouting is timezone agnostic as a scenario
    typically covers a single timezone and the 0 is the midnight in the agency of that scenario.
timeTypeParam:
  in: query
  name: time_type
  schema:
    type: integer
    enum:
      - 0
      - 1
  required: false
  description: The type of the time_of_trip. 0 means it is the departure time; 1 means arrival time. Defaults to 0.
alternativesParam:
  in: query
  name: alternatives
  schema:
    type: boolean
  required: false
  description: Whether the results should return various alternatives if available or just a single result. Defaults to false, no alternatives
minWaitingTimeParam:
  in: query
  name: min_waiting_time
  schema:
    type: integer
  required: false
  description: "The minimum time to wait at a stop/station, in seconds, to cope with uncertainties in the vehicle arrival times. Suggested value: 180"
maxAccessTravelTimeParam:
  in: query
  name: max_access_travel_time
  schema:
    type: integer
  required: false
  description: "Maximum time, in seconds, to reach the first stop/station in the trip"
maxEgressTravelTimeParam:
  in: query
  name: max_egress_travel_time
  schema:
    type: integer
  required: false
  description: "Maximum time, in seconds, from the last stop/station, to reach the destination"
maxTransferTravelTimeParam:
  in: query
  name: max_transfer_travel_time
  schema:
    type: integer
  required: false
  description: "Maximum time, in seconds, for each transfer between stop/station during the trip"
maxTravelTimeParam:
  in: query
  name: max_travel_time
  schema:
    type: integer
  required: false
  description: The maximum total travel time between origin and destination, including access, transfer and egress times
maxFirstWaitingTime:
  in: query
  name: max_first_waiting_time
  schema:
    type: integer
  required: false
  description: The maximum time, in seconds, one can wait at first stop/station to consider this trip valid
